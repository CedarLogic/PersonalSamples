{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentPrefix": {
      "type": "string",
      "metadata": {
        "description": "unique identifier/prefix for all resources in this deployment"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "admin userID for all VMs"
      }
    },
    "adminPassword": {
      "type": "string",
      "metadata": {
        "description": "admin User password"
      }
    }
  },
  "variables": {
    "basicStorageAccountName": "[concat(parameters('deploymentPrefix'),'basicstorage')]",
    "storageAccountType": "Standard_LRS",
    "vnetName": "[concat(parameters('deploymentPrefix'),'VNet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "subnetName": "subApplication",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "PublicLB" : {
        "IPAddressName": "[concat(parameters('deploymentPrefix'),'PublicLBIP')]",
        "lbName": "[concat(parameters('deploymentPrefix'),'PublicLB')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('deploymentPrefix'),'PublicLB'))]"
    },
    "WebHostParms" : {
        "roleprefix": "WebHost",
        "AvailabilitySetName": "WebHostAvSet",
        "InstanceCnt": 2,
        "imageReference" :
        {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"    
        },
        "VmSize": "Standard_A1"        
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('PublicLB')['IPAddressName'],'A')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(variables('PublicLB')['IPAddressName'],'A'))]"
        }
      },
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('PublicLB')['IPAddressName'],'B')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(variables('PublicLB')['IPAddressName'],'B'))]"
        }
      },
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.142.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.142.52.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('PublicLB')['lbName']]",
      "location": "[resourceGroup().location]",
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('PublicLB')['IPAddressName'],'A'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('PublicLB')['IPAddressName'],'B'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend01",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('PublicLB')['IPAddressName'],'A'))]"
              }
            }
          },
          {
            "name": "LoadBalancerFrontend02",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('PublicLB')['IPAddressName'],'B'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBackend"
          }
        ],
        "loadBalancingRules": [
          {
            "Name": "WebTraffic01",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/frontendIpConfigurations/LoadBalancerFrontend01')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/backendAddressPools/LoadBalancerBackend')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            }
          },
          {
            "Name": "WebTraffic02",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/frontendIpConfigurations/LoadBalancerFrontend02')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/backendAddressPools/LoadBalancerBackend')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('PublicLB')['lbName']), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 90,
              "backendPort": 90,
              "idleTimeoutInMinutes": 15
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('PublicLB')['lbName'], '/', variables('WebHostParms')['roleprefix'], 'RDPGateway', padLeft(copyindex(),3,'0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[variables('WebHostParms')['InstanceCnt']]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('PublicLB')['lbName'])]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[concat(variables('PublicLB')['lbID'],'/frontendIPConfigurations/loadBalancerFrontend01')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(22001)]",
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('basicStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      },
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('WebHostParms')['AvailabilitySetName']]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": { },
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('WebHostParms')['roleprefix'], 'NIC', padLeft(copyindex(),3,'0'))]",
      "location": "[resourceGroup().location]",
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" },
      "copy": {
        "name": "nicLoop",
        "count": "[variables('WebHostParms')['InstanceCnt']]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('PublicLB')['lbName'])]",
        "[concat('Microsoft.Network/loadBalancers/', variables('PublicLB')['lbName'], '/inboundNatRules/', variables('WebHostParms')['roleprefix'], 'RDPGateway', padLeft(copyindex(),3,'0'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('PublicLB')['lbID'], '/backendAddressPools/LoadBalancerBackend')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('PublicLB')['lbID'],'/inboundNatRules/', variables('WebHostParms')['roleprefix'], 'RDPGateway', padLeft(copyindex(),3,'0'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('WebHostParms')['roleprefix'], padLeft(copyindex(),3,'0'))]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('WebHostParms')['InstanceCnt']]"
      },
      "location": "[resourceGroup().location]",
      "tags": { "deploymentId": "[parameters('deploymentPrefix')]" },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('basicStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('WebHostParms')['roleprefix'], 'NIC', padLeft(copyindex(),3,'0'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('WebHostParms')['AvailabilitySetName'])]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('WebHostParms')['AvailabilitySetName'])]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('WebHostParms')['VmSize']]"
        },
        "osProfile": {
          "computerName": "[concat(variables('WebHostParms')['roleprefix'], padLeft(copyindex(),3,'0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('WebHostParms')['imageReference']]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('basicStorageAccountName'),'.blob.core.windows.net/vhds/', variables('WebHostParms')['roleprefix'], padLeft(copyindex(),3,'0'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('WebHostParms')['roleprefix'], 'NIC', padLeft(copyindex(),3,'0')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('basicStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}